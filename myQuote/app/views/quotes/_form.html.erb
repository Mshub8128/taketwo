<!-- This will display errors related to both the Quote, Category, and Source -->

  <% if quote.errors.any? %>
    <div class="alert alert-danger">
      <ul>
        <% quote.errors.full_message.each do |msg| %>
          <li><%= msg %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <!--  Initiate the rendering of a form for the @Quote object in the QuotesController. 
  Configure form to submit to the quotes_path using the POST method. Here I am using the
  local: true option to ensure that the form data is sent as a regular HTTP request, 
  rather than Rails default AJAX request method, so I get a full page reload (optional). -->
  
  <%= form_with(model: @quote, local: true) do |f| %>
    
  <!-- This is a hidden field for the requisite user_id which is extracted from the 
  session object created when the user is logged in. Of course, app users should not be 
  able to access this form at all if not logged in -->
  
  <%= f.hidden_field :user_id, value: current_user.id %>

  <!-- Quote text form field with Bootstrap styling -->

  <div class="form-group" style="padding-bottom: 10px;">
    <%= f.text_area :qtext, placeholder: 'Enter a quote here', class: 'form-control' %> 
  </div>

  <!-- Quote year form with Bootstrap styling -->

  <div class="form-group" style="padding-bottom: 10px;">
    <%= f.text_field :qyear, placeholder: 'Quote Year', class: 'form-control' %>
  </div>

  <!-- Quote comment form field with Bootstrap styling -->

  <div class="form-group" style="padding-bottom: 10px;">
    <%= f.text_area :qcom, placeholder: 'Comment (optional)', class: 'form-control' %>
  </div>

  <!-- Recipe IsPublic setting form check box with Bootstrap styling -->
 
  <div class="form-check" style="padding-bottom: 10px;">
    <%= f.label :ispublic do %>
      Public
      <%= f.check_box :ispublic, class: "form-check-input" %>
    <% end %>
  </div>
  
  <!-- Container for the quote source --> 


    <div class="form-group" style="padding-bottom: 10px;">
     <p>
     <%= f.collection_select :source_id, Source.all, :id, Proc.new { |sou| "#{sou.fname} #{sou.lname}" }, { include_blank: 'Select a source' }, class: 'form-select' %>
     </p>
    </div>

  <!-- Container for the quote category -->
    <div id="categories-container">
      <% @quote.quote_categories.each do |quote_category| %>

  <!-- Now create an initial instance of the category field with Bootstrap styling -->
  
  <%= f.fields_for :quote_categories, quote_category do |qc| %>
    <div class="category-field row mb-2">
    <div class="col-auto">

    <!-- The following lines create the dropdown list for selecting a category -->

    <%= qc.label :category_id, "Category", class: "form-label d-inline-block me-2" %>
    <%= qc.select :category_id, Category.all.collect { |cat| [cat.catname, cat.id] }, { include_blank: true }, class: "form-control d-inline-block" %>
  </div>
  <div class="col-auto align-self-end">

  <%= link_to '[-] Remove this category', '#', class: 'remove-category', style: "color: red; text-decoration: none;" %>
  <!-- let's users remove a field -->
  </div>
  </div>
  <% end %>
  <% end %>
  </div>

  <!â€”Create the submit button for the form -->
  <% if new.record? %>
  <div class="mt-3">
    <%= f.submit 'Create Quote', class: 'btn btn-primary btn-lg' %>
  </div>
  <% end %>
<% end %>
 
 <script>
 //waits for document to fully load
 document.addEventListener('DOMContentLoaded', function() {
  //adds an event listener to detect clicks of the "remove this line" links
  document.addEventListener('click', function(e) {
    //if an object with 'remove-category' as a style class is clicked
    if (e.target && e.target.classList.contains('remove-category')){
      //prevents link behaving as normal link
      e.preventDefault();

      //makes sure if the remove function executes, it won't remove all
      const categoryFields = document.querySelectorAll('.category-field');
      //if at least one still remains, delete the one that the link is associated with
      if (categoryFields.length > 1) {
        e.target.closest('.category-field').remove();
      }
    }
  });
 });

 </script>